INSTITUTE OF ENGINEERING AND MANAGEMENT KOLKATA
DEPARTMENT OF COMPUTER SCIENCE
COMPUTER NETWORKS CS 692
DATE :- 14.02.2019
01. Implement 2D Parity and CheckSum.


Source Code : -
2 D Parity
#include<bits/stdc++.h>


using namespace std;


int main(){
        string data;
        cin>>data;
        //frame = 3 bit
        int append_length = 3 - data.length()%3;
        for(auto i=0;i<append_length && append_length != 3;i++){
            data = to_string(0) + data;
        }
        //cout<<data;
        int len = data.length()/3  + 1;
        //cout<<len<<endl;
        //create a len + 1 x len +1 matrix
    
        int mat_data[len][4];
        int k = 0,ones = 0;
        for(auto i=0;i<len-1;i++){
            for(auto j=0;j<3;j++){
              if(data[k] == '0')
                mat_data[i][j] = 0;
              else
                mat_data[i][j] = 1;
            
              k++;
            }
        }
    
        for(auto i=0;i<len-1;i++){
            ones=0;
            for(auto j=0;j<3;j++){
                if(mat_data[i][j] == 1)
                    ones++;
            }
            if(ones % 2 == 0)
                mat_data[i][3] = 0;
            else
                mat_data[i][3] = 1;
    
        }
    
        for(auto i=0;i<4;i++){
            ones =0;
            for(auto j=0;j<len-1;j++){
                if(mat_data[j][i] == 1)
                    ones++;
            }
            if(ones%2==0)
                mat_data[len-1][i] = 0;
            else
                mat_data[len-1][i] = 1;
        }
        cout<<"Sent Code Word : ";
        for(auto i=0;i<len;i++){
            for(auto j=0;j<4;j++){
                cout<<mat_data[i][j];
            }
            cout<<" ";
        }
        cout<<endl;
    
        cout<<"Enter Received CodeWord : ";
        string received;
        cin>>received;
    
        int temp[len][4];
        int flag = 0;
        k = 0,ones = 0;
        for(auto i=0;i<len;i++){
            for(auto j=0;j<4;j++){
              temp[i][j] = received[k] - 48;
            
              k++;
            }
        }
    
        /*for(auto i=0;i<len;i++){
            for(auto j=0;j<4;j++){
              cout<<temp[i][j]<<" ";
          
            }
            cout<<endl;
        }*/
    
        for(auto i=0;i<len-1;i++){
            ones=0;
            for(auto j=0;j<3;j++){
                if(temp[i][j] == 1)
                    ones++;
            }
            if(ones % 2 == 0)
                temp[i][3] = 0;
            else
                temp[i][3] = 1;
    
        }
    
        for(auto i=0;i<4;i++){
            ones =0;
            for(auto j=0;j<len-1;j++){
                if(temp[j][i] == 1)
                    ones++;
            }
            if(ones%2==0)
                temp[len-1][i] = 0;
            else
                temp[len-1][i] = 1;
        }
    
        for(auto i=0;i<4;i++){
            if(temp[len-1][i] != mat_data[len-1][i]){
                cout<<"Incorrect Signal\n";
                flag = 0;
                exit(0);
            }
            flag = 1;
        }
    
        for(auto i=0;i<len;i++){
            if(temp[i][3] != mat_data[i][3]){
                cout<<"Incorrect Signal\n";
                flag = 0;
                exit(0);
            }
            flag = 1;
        }
    
        if(flag)
            cout<<"Correct Signal\n";
    
}


Sample Output :-


  





CheckSum


#include<iostream>
#include<string.h>
 
using namespace std;
int main()
{
    char a[20],b[20];
    char sum[20],complement[20];
    int i;
    
        cout<<"Enter first binary string\n";
    cin>>a;
    cout<<"Enter second binary string\n";
    cin>>b;
    
        if(strlen(a)==strlen(b))
    {
        char carry='0';
        int length=strlen(a);
        
                for(i=length-1;i>=0;i--)
        {
            if(a[i]=='0' && b[i]=='0' && carry=='0')
            {
                sum[i]='0';
                carry='0';
            }
            else if(a[i]=='0' && b[i]=='0' && carry=='1')
            {
                sum[i]='1';
                carry='0';
 
            }
            else if(a[i]=='0' && b[i]=='1' && carry=='0')
            {
                sum[i]='1';
                carry='0';
 
            }
            else if(a[i]=='0' && b[i]=='1' && carry=='1')
            {
                sum[i]='0';
                carry='1';
 
            }
            else if(a[i]=='1' && b[i]=='0' && carry=='0')
            {
                sum[i]='1';
                carry='0';
 
            }
            else if(a[i]=='1' && b[i]=='0' && carry=='1')
            {
                sum[i]='0';
                carry='1';
 
            }
            else if(a[i]=='1' && b[i]=='1' && carry=='0')
            {
                sum[i]='0';
                carry='1';
            }
            else if(a[i]=='1' && b[i]=='1' && carry=='1')
            {
                sum[i]='1';
                carry='1';
            }
            else
                break;
        }
        cout<<"\nSum="<<carry<<sum;
        if(carry == '0'){
        for(i=0;i<length;i++)
        {
            if(sum[i]=='0')
                complement[i]='1';
            else
                complement[i]='0';
        }
        
                if(carry=='1')
            carry='0';
        else
            carry='1';
        complement[i] = '\0';
            cout<<"\nChecksum="<<carry<<complement<<"\n";
    }
    else{
    for(i=0;i<length-1;i++)
        {
            if(sum[i]=='0')
                complement[i]='1';
            else
                complement[i]='0';
        }
        
                if(carry=='1')
            carry='0';
        else
            carry='1';
        complement[i] = '\0';
            cout<<"\nChecksum="<<carry<<complement<<"\n";
    }
    }
    else
        cout<<"\nWrong input strings\n";
        
    return 0;
}
Sample Output :-
  

NAME :- SWAPNIL RAJ
SEC :- A ROLL :- 09